
default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info

# Source: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker
variables:
  DOCKER_TLS_CERTDIR: "/certs"

# Frontend website

# tag: riscvsim

build_frontend:
  stage: build
  script:
    - cd Sources/frontend
    - docker build -t sources_riscvsim-web .
    - docker run sources_riscvsim-web npm run build
  tags:
    - riscvsim

# Run Tests
test_frontend:
  stage: test
  needs:
    - job: build_frontend
  script:
    - docker run sources_riscvsim-web npm run test
  tags:
    - riscvsim

# Deploy the app
# Runs on commit to development branch

deploy_development:
  stage: deploy
  script:
    - cd Sources
    - sudo ./run_container.sh
  environment:
    name: development-env
    url: https://sc-nas.fit.vutbr.cz:3120/
  # Only deploy on development branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: always
  tags:
    - riscvsim

# Deploy a review app when a new merge request is created

deploy_review:
  stage: deploy
  script:
    - cd Sources
    - sudo ./run_container.sh
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$CI_ENVIRONMENT_SLUG.sc-nas.fit.vutbr.cz:3120/
    on_stop: stop_review
    auto_stop_in: 2 weeks
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  tags:
    - riscvsim

stop_review:
  stage: deploy
  script:
    - echo "Remove review app"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual
  tags:
    - riscvsim

# Backend simulator

build_backend:
  stage: build
  script:
    - cd Sources/simulator
    - docker build -t sources_riscvsim-server .
    - docker run sources_riscvsim-server ./gradlew assemble
  tags:
    - riscvsim

test_backend:
  stage: test
  script:
    - cd Sources/simulator
    - docker run sources_riscvsim-server ./gradlew test
  allow_failure: true
  tags:
    - riscvsim
