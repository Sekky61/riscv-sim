id;name;config_json
0;basic;{"code":"addi x1, x1, 5","memoryLocations":[],"cpuConfig":{"robSize":256,"lbSize":64,"sbSize":64,"fetchWidth":3,"commitWidth":4,"btbSize":1024,"phtSize":10,"predictorType":"1bit","predictorDefault":"Not Taken","fUnits":[{"id":0,"fuType":"FX","latency":2,"operations":["special","addition","division","multiplication","bitwise"]},{"id":1,"fuType":"FP","latency":2,"operations":["special","addition","division","multiplication","bitwise"]},{"id":2,"fuType":"L_S","latency":1,"operations":null},{"id":3,"fuType":"Branch","latency":2,"operations":null},{"id":4,"fuType":"Memory","latency":1,"operations":null}],"cacheLines":16,"cacheLineSize":32,"cacheAssoc":2,"cacheReplacement":"Random","storeBehavior":"write-back","storeLatency":0,"loadLatency":1,"laneReplacementDelay":10,"addRemainingDelay":false,"memoryLocations":[]}}
1;loop;{"code":"addi x3, x0, 10000\n            addi x8, x0, 50\n            sw x8,16(x0)\n            loop:\n            beq x3, x0, loopEnd\n            lw x8,16(x0)\n            addi x8, x8, 1\n            sw x8,16(x0)\n            subi x3, x3, 1\n            jal x0, loop\n            loopEnd:","memoryLocations":[],"cpuConfig":{"robSize":256,"lbSize":64,"sbSize":64,"fetchWidth":3,"commitWidth":4,"btbSize":1024,"phtSize":10,"predictorType":"1bit","predictorDefault":"Not Taken","fUnits":[{"id":0,"fuType":"FX","latency":2,"operations":["special","addition","division","multiplication","bitwise"]},{"id":1,"fuType":"FP","latency":2,"operations":["special","addition","division","multiplication","bitwise"]},{"id":2,"fuType":"L_S","latency":1,"operations":null},{"id":3,"fuType":"Branch","latency":2,"operations":null},{"id":4,"fuType":"Memory","latency":1,"operations":null}],"cacheLines":16,"cacheLineSize":32,"cacheAssoc":2,"cacheReplacement":"Random","storeBehavior":"write-back","storeLatency":0,"loadLatency":1,"laneReplacementDelay":10,"addRemainingDelay":false,"memoryLocations":[]}}